dribbling to file "/local/scratch/ejb/rasp/gram/tsgram/corpus/wh.log"
 

----------------
Whose_DDQ$ abacus_NN1 is_VBZ this_DD1 ?_?

1: (T/txt-sc1/+ (S/np-wh_s-gap Whose_DDQ$ (abacus_NN1 is_VBZ this_DD1))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+ (S/np-wh_vp (Whose_DDQ$ abacus_NN1) (is_VBZ this_DD1))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

(((Whose_DDQ$ (abacus_NN1)) (is_VBZ this_DD1)) (?_?))

Is the tree OK? y

1 parses

(((Whose_DDQ$ (abacus_NN1)) (is_VBZ this_DD1)) (?_?))

Accept tree? y


----------------
Which_DDQ of_IO the_AT abbots_NN2 is_VBZ here_RL ?_?

1: (S/np-wh_vp (NP/np-pro_pp-r Which_DDQ (of_IO the_AT abbots_NN2))
    (V1/vp_advp (is_VBZ) (here_RL)))
2: (S/np-wh_vp (NP/np-pro_pp-r Which_DDQ (of_IO the_AT abbots_NN2))
    (V1/be_prt/- is_VBZ here_RL))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

(((Which_DDQ ((of_IO (the_AT (abbots_NN2))))) (is_VBZ here_RL)) (?_?))

Is the tree OK? y

1 parses

(((Which_DDQ ((of_IO (the_AT (abbots_NN2))))) (is_VBZ here_RL)) (?_?))

Accept tree? y


----------------
Which_DDQ abbot_NN1 did_VDD you_PPY see_VV0 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Which_DDQ abbot_NN1 did_VDD you_PPY) (see_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap (Which_DDQ abbot_NN1) (did_VDD you_PPY see_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

(((Which_DDQ (abbot_NN1)) (did_VDD (you_PPY (see_VV0)))) (?_?))

Is the tree OK? y

1 parses

(((Which_DDQ (abbot_NN1)) (did_VDD (you_PPY (see_VV0)))) (?_?))

Accept tree? y


----------------
The_AT abbot_NN1 my_APP$ doubts_NN2 about_II whom_PNQO they_PPHS2 are_VBR aware_JJ of_IO is_VBZ here_RL

No parses


----------------
Which_DDQ abbot_VVD do_VD0 I_PPIS1 have_VH0 my_APP$ doubts_NN2 about_II ?_?

1: (T/txt-sc1/+
    (S/np-wh_vp Which_DDQ
     (abbot_VVD do_VD0 I_PPIS1 have_VH0 my_APP$ doubts_NN2 about_II))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/s-wh_vp-r (Which_DDQ abbot_VVD do_VD0 I_PPIS1)
     (have_VH0 my_APP$ doubts_NN2 about_II))
    (End-punct1/--- ?_?))
3: (T/txt-sc1/+
    (S/np-wh_s-gap Which_DDQ
     (abbot_VVD do_VD0 I_PPIS1 have_VH0 my_APP$ doubts_NN2 about_II))
    (End-punct1/--- ?_?))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? skip

No parses


----------------
Which_DDQ abbot_NN1 do_VD0 I_PPIS1 agree_VV0 with_IW Lee_NP1 's_$ doubts_NN2 about_II ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Which_DDQ abbot_NN1 do_VD0 I_PPIS1)
     (agree_VV0 with_IW Lee_NP1 's_$ doubts_NN2 about_II))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap (Which_DDQ abbot_NN1)
     (do_VD0 I_PPIS1 agree_VV0 with_IW Lee_NP1 's_$ doubts_NN2
      about_II))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp I_PPIS1
    (V1/vp_pp (agree_VV0 with_IW Lee_NP1 's_$ doubts_NN2) (about_II)))
2: (S/np_vp I_PPIS1
    (V1/v_pp_pp agree_VV0 (with_IW Lee_NP1 's_$ doubts_NN2) (about_II)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (P1/p_np with_IW (NP/n1-plu (Lee_NP1 's_$ doubts_NN2)))
2: (P1/p_np with_IW (NP/np-poss_n1 (Lee_NP1 's_$) (doubts_NN2)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

(((Which_DDQ (abbot_NN1))
  (do_VD0
   (I_PPIS1
    (agree_VV0 ((with_IW ((((Lee_NP1)) 's_$) (doubts_NN2))))
     ((about_II))))))
 (?_?))

Is the tree OK? y

1 parses

(((Which_DDQ (abbot_NN1))
  (do_VD0
   (I_PPIS1
    (agree_VV0 ((with_IW ((((Lee_NP1)) 's_$) (doubts_NN2))))
     ((about_II))))))
 (?_?))

Accept tree? y


----------------
Which_DDQ abbot_NN1 do_VD0 I_PPIS1 have_VH0 some_DD doubts_NN2 about_II ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Which_DDQ abbot_NN1 do_VD0 I_PPIS1)
     (have_VH0 some_DD doubts_NN2 about_II))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap (Which_DDQ abbot_NN1)
     (do_VD0 I_PPIS1 have_VH0 some_DD doubts_NN2 about_II))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (V1/have_np/-- have_VH0 (NP/det_n1 some_DD (doubts_NN2)))
2: (V1/have_np/-- have_VH0 (NP/np-pro_n-r some_DD doubts_NN2))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 1

Tree selected:

(((Which_DDQ (abbot_NN1))
  (do_VD0 (I_PPIS1 ((have_VH0 (some_DD (doubts_NN2))) ((about_II))))))
 (?_?))

Is the tree OK? y

1 parses

(((Which_DDQ (abbot_NN1))
  (do_VD0 (I_PPIS1 ((have_VH0 (some_DD (doubts_NN2))) ((about_II))))))
 (?_?))

Accept tree? y


----------------
My_APP$ doubts_NN2 all_DB of_IO which_DDQ are_VBR crazy_JJ do_VD0 n't_XX help_VV0 me_PPIO1

1: (S/np_vp
    (NP/det_a1-r/+- My_APP$ (doubts_NN2 all_DB of_IO which_DDQ are_VBR)
     (crazy_JJ))
    (V1/do_bse/-- do_VD0 (n't_XX help_VV0 me_PPIO1)))
2: (S/np_vp
    (NP/det_n1 My_APP$
     (doubts_NN2 all_DB of_IO which_DDQ are_VBR crazy_JJ))
    (V1/do_bse/-- do_VD0 (n't_XX help_VV0 me_PPIO1)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

(((My_APP$
   (doubts_NN2
    (((all_DB) ((of_IO which_DDQ))) (are_VBR ((crazy_JJ))))))
  (do_VD0 (n't_XX (help_VV0 me_PPIO1)))))

Is the tree OK? y

1 parses

(((My_APP$
   (doubts_NN2
    (((all_DB) ((of_IO which_DDQ))) (are_VBR ((crazy_JJ))))))
  (do_VD0 (n't_XX (help_VV0 me_PPIO1)))))

Accept tree? y


----------------
Who_PNQS did_VDD he_PPHS1 apologize_VV0 for_IF having_VHG his_APP$ doubts_NN2 about_II ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD he_PPHS1)
     (apologize_VV0 for_IF having_VHG his_APP$ doubts_NN2 about_II))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (did_VDD he_PPHS1 apologize_VV0 for_IF having_VHG his_APP$
      doubts_NN2 about_II))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp he_PPHS1
    (V1/vp_pp (apologize_VV0 for_IF having_VHG his_APP$ doubts_NN2)
     (about_II)))
2: (S/np_vp he_PPHS1
    (V1/v_pp apologize_VV0
     (for_IF having_VHG his_APP$ doubts_NN2 about_II)))
3: (S/np_vp he_PPHS1
    (V1/vp_pp (apologize_VV0)
     (for_IF having_VHG his_APP$ doubts_NN2 about_II)))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? 2

Tree selected:

((Who_PNQS
  (did_VDD
   (he_PPHS1
    (apologize_VV0
     ((for_IF ((having_VHG (his_APP$ (doubts_NN2))) ((about_II)))))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (did_VDD
   (he_PPHS1
    (apologize_VV0
     ((for_IF ((having_VHG (his_APP$ (doubts_NN2))) ((about_II)))))))))
 (?_?))

Accept tree? y


----------------
How_RGQ many_DA2 abbots_NN2 can_VM the_AT abbey_NN1 afford_VV0 ?_?

1: (PP/p1 (P1/p_np-pro How_RGQ (many_DA2 abbots_NN2)))
2: (PP/p1 (P1/p_np How_RGQ (many_DA2 abbots_NN2)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((((How_RGQ ((((many_DA2)) (abbots_NN2)))))
  (can_VM ((the_AT (abbey_NN1)) (afford_VV0))))
 (?_?))

Is the tree OK? y

1 parses

((((How_RGQ ((((many_DA2)) (abbots_NN2)))))
  (can_VM ((the_AT (abbey_NN1)) (afford_VV0))))
 (?_?))

Accept tree? y


----------------
His_APP$ messages_NN2 many_DA2 of_IO which_DDQ were_VBDR not_XX clear_JJ amazed_VVD me_PPIO1

1: (S/np_vp
    (NP/det_a1-r/+- His_APP$
     (messages_NN2 many_DA2 of_IO which_DDQ were_VBDR)
     (not_XX clear_JJ))
    (V1/v_np-pro amazed_VVD me_PPIO1))
2: (S/np_vp
    (NP/det_n1 His_APP$
     (messages_NN2 many_DA2 of_IO which_DDQ were_VBDR not_XX clear_JJ))
    (V1/v_np-pro amazed_VVD me_PPIO1))
3: (S/np_vp
    (NP/np_a1
     (His_APP$ messages_NN2 many_DA2 of_IO which_DDQ were_VBDR)
     (not_XX clear_JJ))
    (V1/v_np-pro amazed_VVD me_PPIO1))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? 2

Tree selected:

(((His_APP$
   (messages_NN2
    ((many_DA2 ((of_IO which_DDQ)))
     (were_VBDR ((not_XX (clear_JJ)))))))
  (amazed_VVD me_PPIO1)))

Is the tree OK? y

1 parses

(((His_APP$
   (messages_NN2
    ((many_DA2 ((of_IO which_DDQ)))
     (were_VBDR ((not_XX (clear_JJ)))))))
  (amazed_VVD me_PPIO1)))

Accept tree? y


----------------
Who_PNQS did_VDD he_PPHS1 have_VH0 a_AT1 desire_NN1 to_TO help_VV0 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD he_PPHS1)
     (have_VH0 a_AT1 desire_NN1 to_TO help_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (did_VDD he_PPHS1 have_VH0 a_AT1 desire_NN1 to_TO help_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp he_PPHS1
    (V1/have_np/-- have_VH0 (a_AT1 desire_NN1 to_TO help_VV0)))
2: (S/np_vp he_PPHS1
    (V1/vp_inf-r (have_VH0 a_AT1 desire_NN1) (to_TO help_VV0)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 1

Tree selected:

((Who_PNQS
  (did_VDD
   (he_PPHS1 (have_VH0 (a_AT1 (desire_NN1 (to_TO (help_VV0))))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (did_VDD
   (he_PPHS1 (have_VH0 (a_AT1 (desire_NN1 (to_TO (help_VV0))))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS did_VDD he_PPHS1 have_VH0 a_AT1 characteristic_JJ desire_NN1 to_TO help_VV0 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD he_PPHS1)
     (have_VH0 a_AT1 characteristic_JJ desire_NN1 to_TO help_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (did_VDD he_PPHS1 have_VH0 a_AT1 characteristic_JJ desire_NN1
      to_TO help_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp he_PPHS1
    (V1/have_np/-- have_VH0
     (a_AT1 characteristic_JJ desire_NN1 to_TO help_VV0)))
2: (S/np_vp he_PPHS1
    (V1/vp_inf-r (have_VH0 a_AT1 characteristic_JJ desire_NN1)
     (to_TO help_VV0)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 1

Tree selected:

((Who_PNQS
  (did_VDD
   (he_PPHS1
    (have_VH0
     (a_AT1
      (((characteristic_JJ)) (desire_NN1 (to_TO (help_VV0)))))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (did_VDD
   (he_PPHS1
    (have_VH0
     (a_AT1
      (((characteristic_JJ)) (desire_NN1 (to_TO (help_VV0)))))))))
 (?_?))

Accept tree? y


----------------
How_RGQ confident_JJ is_VBZ he_PPHS1 ?_?

Tree selected:

((((How_RGQ (confident_JJ))) (is_VBZ he_PPHS1)) (?_?))

Is the tree OK? y

1 parses

((((How_RGQ (confident_JJ))) (is_VBZ he_PPHS1)) (?_?))

Accept tree? y


----------------
How_RGQ easily_RR confident_JJ he_PPHS1 seems_VVZ !_!

1: (T/txt-sc1/+
    (S/pp-wh_s (How_RGQ) (easily_RR confident_JJ he_PPHS1 seems_VVZ))
    (End-punct2/-- !_!))
2: (T/txt-sc1/+
    (S/pp_vp-r (How_RGQ easily_RR confident_JJ he_PPHS1) (seems_VVZ))
    (End-punct2/-- !_!))
3: (T/txt-ph2
    (Tph/pp/--- (How_RGQ easily_RR confident_JJ he_PPHS1 seems_VVZ))
    !_!)
4: (T/txt-sc1/+
    (S/pp-np_s/- (How_RGQ easily_RR confident_JJ) (he_PPHS1 seems_VVZ))
    (End-punct2/-- !_!))
Which choice (1 - 4 / undo / gde / restart / skip / finish)? 4

Tree selected:

((((How_RGQ (((easily_RR)) (confident_JJ)))) (he_PPHS1 (seems_VVZ)))
 (!_!))

Is the tree OK? y

1 parses

((((How_RGQ (((easily_RR)) (confident_JJ)))) (he_PPHS1 (seems_VVZ)))
 (!_!))

Accept tree? y


----------------
Who_PNQS is_VBZ he_PPHS1 eager_JJ to_TO help_VV0 ?_?

1: (T/txt-sc1/+
    (S/np-wh_vp Who_PNQS (is_VBZ he_PPHS1 eager_JJ to_TO help_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS (is_VBZ he_PPHS1 eager_JJ to_TO help_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((Who_PNQS (is_VBZ he_PPHS1 ((eager_JJ (to_TO (help_VV0)))))) (?_?))

Is the tree OK? y

1 parses

((Who_PNQS (is_VBZ he_PPHS1 ((eager_JJ (to_TO (help_VV0)))))) (?_?))

Accept tree? y


----------------
Who_PNQS is_VBZ he_PPHS1 resolutely_RR eager_JJ to_TO help_VV0 ?_?

1: (T/txt-sc1/+
    (S/np-wh_vp Who_PNQS
     (is_VBZ he_PPHS1 resolutely_RR eager_JJ to_TO help_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (is_VBZ he_PPHS1 resolutely_RR eager_JJ to_TO help_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((Who_PNQS
  (is_VBZ he_PPHS1
   ((((resolutely_RR)) (eager_JJ (to_TO (help_VV0)))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (is_VBZ he_PPHS1
   ((((resolutely_RR)) (eager_JJ (to_TO (help_VV0)))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS is_VBZ he_PPHS1 accountable_JJ to_II ?_?

1: (T/txt-sc1/+
    (S/np-wh_vp Who_PNQS (is_VBZ he_PPHS1 accountable_JJ to_II))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS (is_VBZ he_PPHS1 accountable_JJ to_II))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np-wh_s-gap Who_PNQS
    (S/sai-be3/-- is_VBZ he_PPHS1 (accountable_JJ to_II)))
2: (S/np-wh_s-gap Who_PNQS
    (S/sai-be2/-- is_VBZ (he_PPHS1 accountable_JJ) (to_II)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 1

1: (AP/a1 (A1/a1_pp (accountable_JJ) (to_II)))
2: (AP/a1 (A1/a_pp accountable_JJ (to_II)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((Who_PNQS (is_VBZ he_PPHS1 ((accountable_JJ ((to_II)))))) (?_?))

Is the tree OK? y

1 parses

((Who_PNQS (is_VBZ he_PPHS1 ((accountable_JJ ((to_II)))))) (?_?))

Accept tree? y


----------------
To_II whom_PNQO is_VBZ he_PPHS1 accountable_JJ ?_?

1: (T/txt-ph1
    (Tph/pp/--- (To_II whom_PNQO is_VBZ he_PPHS1 accountable_JJ)) ?_?)
2: (T/txt-sc1/+
    (S/pp-np-wh_s (To_II whom_PNQO) (is_VBZ he_PPHS1 accountable_JJ))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((((To_II whom_PNQO)) (is_VBZ he_PPHS1 ((accountable_JJ)))) (?_?))

Is the tree OK? y

1 parses

((((To_II whom_PNQO)) (is_VBZ he_PPHS1 ((accountable_JJ)))) (?_?))

Accept tree? y


----------------
What_DDQ is_VBZ the_AT abbey_NN1 made_VVD up_RP of_IO ?_?

1: (T/txt-sc1/+
    (S/np-wh_vp What_DDQ
     (is_VBZ the_AT abbey_NN1 made_VVD up_RP of_IO))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/s-wh_vp-r (What_DDQ is_VBZ the_AT abbey_NN1)
     (made_VVD up_RP of_IO))
    (End-punct1/--- ?_?))
3: (T/txt-sc1/+
    (S/np-wh_s-gap What_DDQ
     (is_VBZ the_AT abbey_NN1 made_VVD up_RP of_IO))
    (End-punct1/--- ?_?))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? 3

1: (S/np_vp (NP/det_n1 the_AT (abbey_NN1))
    (V1/vp_pp (made_VVD up_RP) (of_IO)))
2: (S/np_vp (NP/det_n1 the_AT (abbey_NN1))
    (V1/v_pp (made_VVD up_RP) (of_IO)))
3: (S/np_vp (NP/det_n1 the_AT (abbey_NN1))
    (V1/vp_advp (made_VVD) (up_RP of_IO)))
4: (S/np_vp (NP/det_n1 the_AT (abbey_NN1))
    (V1/v_pp-of (made_VVD up_RP) (of_IO)))
5: (S/np_vp (NP/det_n1 the_AT (abbey_NN1))
    (V1/vp_pp (made_VVD) (up_RP of_IO)))
Which choice (1 - 5 / undo / gde / restart / skip / finish)? 4

Tree selected:

((What_DDQ
  (is_VBZ ((the_AT (abbey_NN1)) ((made_VVD up_RP) ((of_IO))))))
 (?_?))

Is the tree OK? y

1 parses

((What_DDQ
  (is_VBZ ((the_AT (abbey_NN1)) ((made_VVD up_RP) ((of_IO))))))
 (?_?))

Accept tree? y


----------------
Which_DDQ abbot_NN1 was_VBDZ he_PPHS1 aware_JJ that_CST he_PPHS1 might_VM not_XX get_VV0 to_TO help_VV0 ?_?

1: (T/txt-sc1/+
    (S/np-wh_vp (Which_DDQ abbot_NN1)
     (was_VBDZ he_PPHS1 aware_JJ that_CST he_PPHS1 might_VM not_XX
      get_VV0 to_TO help_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Which_DDQ
     (abbot_NN1 was_VBDZ he_PPHS1 aware_JJ that_CST he_PPHS1 might_VM
      not_XX get_VV0 to_TO help_VV0))
    (End-punct1/--- ?_?))
3: (T/txt-sc1/+
    (S/np-wh_s-gap (Which_DDQ abbot_NN1)
     (was_VBDZ he_PPHS1 aware_JJ that_CST he_PPHS1 might_VM not_XX
      get_VV0 to_TO help_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? 3

1: (S/np_vp he_PPHS1
    (V1/vp_inf-r (might_VM not_XX get_VV0) (to_TO help_VV0)))
2: (S/np_vp he_PPHS1
    (V1/modal_bse/-- might_VM (not_XX get_VV0 to_TO help_VV0)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

(((Which_DDQ (abbot_NN1))
  (was_VBDZ he_PPHS1
   ((aware_JJ
     (that_CST
      (he_PPHS1 (might_VM (not_XX (get_VV0 (to_TO (help_VV0)))))))))))
 (?_?))

Is the tree OK? y

1 parses

(((Which_DDQ (abbot_NN1))
  (was_VBDZ he_PPHS1
   ((aware_JJ
     (that_CST
      (he_PPHS1 (might_VM (not_XX (get_VV0 (to_TO (help_VV0)))))))))))
 (?_?))

Accept tree? y


----------------
Which_DDQ abbot_NN1 was_VBDZ he_PPHS1 aware_JJ might_VM not_XX help_VV0 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Which_DDQ abbot_NN1 was_VBDZ he_PPHS1 aware_JJ)
     (might_VM not_XX help_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap (Which_DDQ abbot_NN1)
     (was_VBDZ he_PPHS1 aware_JJ might_VM not_XX help_VV0))
    (End-punct1/--- ?_?))
3: (T/txt-ph1
    (Tph/np/------
     (Which_DDQ abbot_NN1 was_VBDZ he_PPHS1 aware_JJ might_VM not_XX
      help_VV0))
    ?_?)
4: (T/txt-sc1/+
    (S/np-wh_vp (Which_DDQ abbot_NN1)
     (was_VBDZ he_PPHS1 aware_JJ might_VM not_XX help_VV0))
    (End-punct1/--- ?_?))
5: (T/txt-sc1/+
    (S/np-wh_s-gap Which_DDQ
     (abbot_NN1 was_VBDZ he_PPHS1 aware_JJ might_VM not_XX help_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 5 / undo / gde / restart / skip / finish)? 2

1: (S/np-wh_s-gap (NP/det_n1 Which_DDQ (abbot_NN1))
    (S/s-ing_vp-r (was_VBDZ he_PPHS1 aware_JJ)
     (might_VM not_XX help_VV0)))
2: (S/np-wh_s-gap (NP/det_n1 Which_DDQ (abbot_NN1))
    (S/sai/- was_VBDZ (he_PPHS1 aware_JJ might_VM not_XX help_VV0)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

(((Which_DDQ (abbot_NN1))
  (was_VBDZ ((he_PPHS1 ((aware_JJ))) (might_VM (not_XX (help_VV0))))))
 (?_?))

Is the tree OK? y

1 parses

(((Which_DDQ (abbot_NN1))
  (was_VBDZ ((he_PPHS1 ((aware_JJ))) (might_VM (not_XX (help_VV0))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS is_VBZ it_PPH1 convenient_JJ that_CST he_PPHS1 could_VM help_VV0 ?_?

1: (T/txt-sc1/+
    (S/np-wh_vp Who_PNQS
     (is_VBZ it_PPH1 convenient_JJ that_CST he_PPHS1 could_VM
      help_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (is_VBZ it_PPH1 convenient_JJ that_CST he_PPHS1 could_VM
      help_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((Who_PNQS
  (is_VBZ it_PPH1
   ((convenient_JJ (that_CST (he_PPHS1 (could_VM (help_VV0))))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (is_VBZ it_PPH1
   ((convenient_JJ (that_CST (he_PPHS1 (could_VM (help_VV0))))))))
 (?_?))

Accept tree? y


----------------
To_II whom_PNQO was_VBDZ it_PPH1 clear_JJ that_CST he_PPHS1 would_VM n't_XX apologize_VV0 ?_?

1: (T/txt-ph1
    (Tph/pp/---
     (To_II whom_PNQO was_VBDZ it_PPH1 clear_JJ that_CST he_PPHS1
      would_VM n't_XX apologize_VV0))
    ?_?)
2: (T/txt-sc1/+
    (S/pp-np-wh_s (To_II whom_PNQO)
     (was_VBDZ it_PPH1 clear_JJ that_CST he_PPHS1 would_VM n't_XX
      apologize_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((((To_II whom_PNQO))
  (was_VBDZ it_PPH1
   ((clear_JJ
     (that_CST (he_PPHS1 (would_VM (n't_XX (apologize_VV0)))))))))
 (?_?))

Is the tree OK? y

1 parses

((((To_II whom_PNQO))
  (was_VBDZ it_PPH1
   ((clear_JJ
     (that_CST (he_PPHS1 (would_VM (n't_XX (apologize_VV0)))))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS is_VBZ it_PPH1 necessary_JJ that_CST he_PPHS1 help_VV0 ?_?

1: (T/txt-sc1/+
    (S/np-wh_vp Who_PNQS
     (is_VBZ it_PPH1 necessary_JJ that_CST he_PPHS1 help_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (is_VBZ it_PPH1 necessary_JJ that_CST he_PPHS1 help_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((Who_PNQS
  (is_VBZ it_PPH1 ((necessary_JJ (that_CST (he_PPHS1 (help_VV0)))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (is_VBZ it_PPH1 ((necessary_JJ (that_CST (he_PPHS1 (help_VV0)))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS is_VBZ it_PPH1 inessential_JJ for_IF him_PPHO1 to_TO help_VV0 ?_?

1: (T/txt-sc1/+
    (S/np-wh_vp Who_PNQS
     (is_VBZ it_PPH1 inessential_JJ for_IF him_PPHO1 to_TO help_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (is_VBZ it_PPH1 inessential_JJ for_IF him_PPHO1 to_TO help_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np-wh_s-gap Who_PNQS
    (S/sai-be2/-- is_VBZ (it_PPH1 inessential_JJ)
     (for_IF him_PPHO1 to_TO help_VV0)))
2: (S/np-wh_s-gap Who_PNQS
    (S/sai-be3/-- is_VBZ it_PPH1
     (inessential_JJ for_IF him_PPHO1 to_TO help_VV0)))
3: (S/np-wh_s-gap Who_PNQS
    (S/sai-be1-r/--- is_VBZ (it_PPH1 inessential_JJ for_IF)
     (him_PPHO1 to_TO help_VV0)))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? 2

1: (PP/p1 (P1/p_sinf for_IF him_PPHO1 (to_TO help_VV0)))
2: (PP/p1 (P1/p_np-pro for_IF (him_PPHO1 to_TO help_VV0)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 1

Tree selected:

((Who_PNQS
  (is_VBZ it_PPH1
   ((inessential_JJ ((for_IF him_PPHO1 (to_TO (help_VV0))))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (is_VBZ it_PPH1
   ((inessential_JJ ((for_IF him_PPHO1 (to_TO (help_VV0))))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS is_VBZ it_PPH1 crazy_JJ for_IF him_PPHO1 to_TO help_VV0 ?_?

1: (T/txt-sc1/+
    (S/np-wh_vp Who_PNQS
     (is_VBZ it_PPH1 crazy_JJ for_IF him_PPHO1 to_TO help_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (is_VBZ it_PPH1 crazy_JJ for_IF him_PPHO1 to_TO help_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np-wh_s-gap Who_PNQS
    (S/sai-be2/-- is_VBZ (it_PPH1 crazy_JJ)
     (for_IF him_PPHO1 to_TO help_VV0)))
2: (S/np-wh_s-gap Who_PNQS
    (S/sai-be3/-- is_VBZ it_PPH1
     (crazy_JJ for_IF him_PPHO1 to_TO help_VV0)))
3: (S/np-wh_s-gap Who_PNQS
    (S/sai-be1-r/--- is_VBZ (it_PPH1 crazy_JJ for_IF)
     (him_PPHO1 to_TO help_VV0)))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? 2

1: (PP/p1 (P1/p_sinf for_IF him_PPHO1 (to_TO help_VV0)))
2: (PP/p1 (P1/p_np-pro for_IF (him_PPHO1 to_TO help_VV0)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 1

Tree selected:

((Who_PNQS
  (is_VBZ it_PPH1
   ((crazy_JJ ((for_IF him_PPHO1 (to_TO (help_VV0))))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (is_VBZ it_PPH1
   ((crazy_JJ ((for_IF him_PPHO1 (to_TO (help_VV0))))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS is_VBZ he_PPHS1 certain_JJ to_TO help_VV0 ?_?

1: (T/txt-sc1/+
    (S/np-wh_vp Who_PNQS (is_VBZ he_PPHS1 certain_JJ to_TO help_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (is_VBZ he_PPHS1 certain_JJ to_TO help_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((Who_PNQS (is_VBZ he_PPHS1 ((certain_JJ (to_TO (help_VV0)))))) (?_?))

Is the tree OK? y

1 parses

((Who_PNQS (is_VBZ he_PPHS1 ((certain_JJ (to_TO (help_VV0)))))) (?_?))

Accept tree? y


----------------
Who_PNQS is_VBZ he_PPHS1 busy_JJ helping_VVG ?_?

1: (T/txt-sc1/+
    (S/np-wh_vp Who_PNQS (is_VBZ he_PPHS1 busy_JJ helping_VVG))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS (is_VBZ he_PPHS1 busy_JJ helping_VVG))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np-wh_s-gap Who_PNQS
    (S/sai/- is_VBZ (he_PPHS1 busy_JJ helping_VVG)))
2: (S/np-wh_s-gap Who_PNQS
    (S/sai-be3/-- is_VBZ he_PPHS1 (busy_JJ helping_VVG)))
3: (S/np-wh_s-gap Who_PNQS
    (S/sai-be-n1-r/--- is_VBZ he_PPHS1 (busy_JJ helping_VVG)))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? 2

Tree selected:

((Who_PNQS (is_VBZ he_PPHS1 ((busy_JJ (helping_VVG))))) (?_?))

Is the tree OK? y

1 parses

((Who_PNQS (is_VBZ he_PPHS1 ((busy_JJ (helping_VVG))))) (?_?))

Accept tree? y


----------------
Who_PNQS is_VBZ he_PPHS1 confident_JJ of_IO having_VHG helped_VVD ?_?

1: (T/txt-sc1/+
    (S/np-wh_vp Who_PNQS
     (is_VBZ he_PPHS1 confident_JJ of_IO having_VHG helped_VVD))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (is_VBZ he_PPHS1 confident_JJ of_IO having_VHG helped_VVD))
    (End-punct1/--- ?_?))
3: (T/txt-sc1/+
    (S/s-wh_vp-r
     (Who_PNQS is_VBZ he_PPHS1 confident_JJ of_IO having_VHG)
     (helped_VVD))
    (End-punct1/--- ?_?))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? 2

1: (S/np-wh_s-gap Who_PNQS
    (S/sai/- is_VBZ
     (he_PPHS1 confident_JJ of_IO having_VHG helped_VVD)))
2: (S/np-wh_s-gap Who_PNQS
    (S/s-ing_vp-r (is_VBZ he_PPHS1 confident_JJ of_IO having_VHG)
     (helped_VVD)))
3: (S/np-wh_s-gap Who_PNQS
    (S/sai-be3/-- is_VBZ he_PPHS1
     (confident_JJ of_IO having_VHG helped_VVD)))
4: (S/np-wh_s-gap Who_PNQS
    (S/sai-be2/-- is_VBZ (he_PPHS1 confident_JJ)
     (of_IO having_VHG helped_VVD)))
Which choice (1 - 4 / undo / gde / restart / skip / finish)? 3

Tree selected:

((Who_PNQS
  (is_VBZ he_PPHS1
   ((confident_JJ ((of_IO (having_VHG (helped_VVD))))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (is_VBZ he_PPHS1
   ((confident_JJ ((of_IO (having_VHG (helped_VVD))))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS was_VBDZ he_PPHS1 abandoned_VVD by_II ?_?

1: (T/txt-sc1/+
    (S/np-wh_vp Who_PNQS (was_VBDZ he_PPHS1 abandoned_VVD by_II))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS was_VBDZ he_PPHS1) (abandoned_VVD by_II))
    (End-punct1/--- ?_?))
3: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS (was_VBDZ he_PPHS1 abandoned_VVD by_II))
    (End-punct1/--- ?_?))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? 3

1: (S/np_vp he_PPHS1 (V1/v_pp abandoned_VVD (by_II)))
2: (S/np_vp he_PPHS1 (V1/vp_pp (abandoned_VVD) (by_II)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((Who_PNQS (was_VBDZ (he_PPHS1 ((abandoned_VVD) ((by_II)))))) (?_?))

Is the tree OK? y

1 parses

((Who_PNQS (was_VBDZ (he_PPHS1 ((abandoned_VVD) ((by_II)))))) (?_?))

Accept tree? y


----------------
By_II whom_PNQO was_VBDZ he_PPHS1 abandoned_VVD ?_?

1: (T/txt-ph1
    (Tph/pp/--- (By_II whom_PNQO was_VBDZ he_PPHS1 abandoned_VVD)) ?_?)
2: (T/txt-sc1/+
    (S/pp-np-wh_s (By_II whom_PNQO) (was_VBDZ he_PPHS1 abandoned_VVD))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((((By_II whom_PNQO)) (was_VBDZ (he_PPHS1 (abandoned_VVD)))) (?_?))

Is the tree OK? y

1 parses

((((By_II whom_PNQO)) (was_VBDZ (he_PPHS1 (abandoned_VVD)))) (?_?))

Accept tree? y


----------------
Who_PNQS did_VDD she_PPHS1 abandon_VV0 her_APP$ doubts_NN2 about_II ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD she_PPHS1)
     (abandon_VV0 her_APP$ doubts_NN2 about_II))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (did_VDD she_PPHS1 abandon_VV0 her_APP$ doubts_NN2 about_II))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp she_PPHS1
    (V1/vp_pp (abandon_VV0 her_APP$ doubts_NN2) (about_II)))
2: (S/np_vp she_PPHS1
    (V1/v_np_pp abandon_VV0 (her_APP$ doubts_NN2) (about_II)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((Who_PNQS
  (did_VDD
   (she_PPHS1 (abandon_VV0 (her_APP$ (doubts_NN2)) ((about_II))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (did_VDD
   (she_PPHS1 (abandon_VV0 (her_APP$ (doubts_NN2)) ((about_II))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS did_VDD she_PPHS1 abandon_VV0 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD she_PPHS1) (abandon_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS (did_VDD she_PPHS1 abandon_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((Who_PNQS (did_VDD (she_PPHS1 (abandon_VV0)))) (?_?))

Is the tree OK? y

1 parses

((Who_PNQS (did_VDD (she_PPHS1 (abandon_VV0)))) (?_?))

Accept tree? y


----------------
Who_PNQS did_VDD she_PPHS1 ask_VV0 out_RP ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD she_PPHS1) (ask_VV0 out_RP))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS (did_VDD she_PPHS1 ask_VV0 out_RP))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp she_PPHS1 (V1/v (ask_VV0 out_RP)))
2: (S/np_vp she_PPHS1 (V1/vp_advp (ask_VV0) (out_RP)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 1

Tree selected:

((Who_PNQS (did_VDD (she_PPHS1 ((ask_VV0 out_RP))))) (?_?))

Is the tree OK? y

1 parses

((Who_PNQS (did_VDD (she_PPHS1 ((ask_VV0 out_RP))))) (?_?))

Accept tree? y


----------------
What_DDQ did_VDD she_PPHS1 give_VV0 him_PPHO1 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (What_DDQ did_VDD she_PPHS1) (give_VV0 him_PPHO1))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap What_DDQ (did_VDD she_PPHS1 give_VV0 him_PPHO1))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((What_DDQ (did_VDD (she_PPHS1 (give_VV0 him_PPHO1)))) (?_?))

Is the tree OK? y

1 parses

((What_DDQ (did_VDD (she_PPHS1 (give_VV0 him_PPHO1)))) (?_?))

Accept tree? y


----------------
What_DDQ did_VDD she_PPHS1 give_VV0 him_PPHO1 back_RL ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (What_DDQ did_VDD she_PPHS1)
     (give_VV0 him_PPHO1 back_RL))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap What_DDQ
     (did_VDD she_PPHS1 give_VV0 him_PPHO1 back_RL))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp she_PPHS1 (V1/vp_advp (give_VV0 him_PPHO1) (back_RL)))
2: (S/np_vp she_PPHS1 (V1/v_npro_prt give_VV0 him_PPHO1 back_RL))
3: (S/np_vp she_PPHS1 (V1/v_np-pro give_VV0 (him_PPHO1 back_RL)))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? 2

Tree selected:

((What_DDQ (did_VDD (she_PPHS1 (give_VV0 him_PPHO1 back_RL)))) (?_?))

Is the tree OK? y

1 parses

((What_DDQ (did_VDD (she_PPHS1 (give_VV0 him_PPHO1 back_RL)))) (?_?))

Accept tree? y


----------------
What_DDQ did_VDD she_PPHS1 carry_VV0 on_RP with_IW ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (What_DDQ did_VDD she_PPHS1)
     (carry_VV0 on_RP with_IW))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap What_DDQ
     (did_VDD she_PPHS1 carry_VV0 on_RP with_IW))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp she_PPHS1 (V1/vp_pp (carry_VV0 on_RP) (with_IW)))
2: (S/np_vp she_PPHS1 (V1/v_pp (carry_VV0 on_RP) (with_IW)))
3: (S/np_vp she_PPHS1 (V1/vp_pp (carry_VV0) (on_RP with_IW)))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? 2

Tree selected:

((What_DDQ (did_VDD (she_PPHS1 ((carry_VV0 on_RP) ((with_IW)))))) (?_?))

Is the tree OK? y

1 parses

((What_DDQ (did_VDD (she_PPHS1 ((carry_VV0 on_RP) ((with_IW)))))) (?_?))

Accept tree? y


----------------
Which_DDQ message_NN1 did_VDD she_PPHS1 give_VV0 to_II him_PPHO1 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Which_DDQ message_NN1 did_VDD she_PPHS1)
     (give_VV0 to_II him_PPHO1))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap (Which_DDQ message_NN1)
     (did_VDD she_PPHS1 give_VV0 to_II him_PPHO1))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp she_PPHS1 (V1/v_pp give_VV0 (to_II him_PPHO1)))
2: (S/np_vp she_PPHS1 (V1/vp_pp (give_VV0) (to_II him_PPHO1)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 1

Tree selected:

(((Which_DDQ (message_NN1))
  (did_VDD (she_PPHS1 (give_VV0 ((to_II him_PPHO1))))))
 (?_?))

Is the tree OK? y

1 parses

(((Which_DDQ (message_NN1))
  (did_VDD (she_PPHS1 (give_VV0 ((to_II him_PPHO1))))))
 (?_?))

Accept tree? y


----------------
What_DDQ did_VDD she_PPHS1 give_VV0 back_RL to_II him_PPHO1 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (What_DDQ did_VDD she_PPHS1)
     (give_VV0 back_RL to_II him_PPHO1))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap What_DDQ
     (did_VDD she_PPHS1 give_VV0 back_RL to_II him_PPHO1))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp she_PPHS1 (V1/vp_pp (give_VV0 back_RL) (to_II him_PPHO1)))
2: (S/np_vp she_PPHS1 (V1/v_pp (give_VV0 back_RL) (to_II him_PPHO1)))
3: (S/np_vp she_PPHS1 (V1/vp_pp (give_VV0) (back_RL to_II him_PPHO1)))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? 2

Tree selected:

((What_DDQ
  (did_VDD (she_PPHS1 ((give_VV0 back_RL) ((to_II him_PPHO1))))))
 (?_?))

Is the tree OK? y

1 parses

((What_DDQ
  (did_VDD (she_PPHS1 ((give_VV0 back_RL) ((to_II him_PPHO1))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS does_VDZ she_PPHS1 answer_VV0 to_II for_IF her_APP$ actions_NN2 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS does_VDZ she_PPHS1)
     (answer_VV0 to_II for_IF her_APP$ actions_NN2))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (does_VDZ she_PPHS1 answer_VV0 to_II for_IF her_APP$ actions_NN2))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp she_PPHS1
    (V1/vp_pp (answer_VV0 to_II) (for_IF her_APP$ actions_NN2)))
2: (S/np_vp she_PPHS1
    (V1/v_pp answer_VV0 (to_II for_IF her_APP$ actions_NN2)))
3: (S/np_vp she_PPHS1
    (V1/vp_pp (answer_VV0) (to_II for_IF her_APP$ actions_NN2)))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? 1

1: (V1/vp_pp (V1/vp_pp (answer_VV0) (to_II))
    (PP/p1 (for_IF her_APP$ actions_NN2)))
2: (V1/vp_pp (V1/v_pp answer_VV0 (to_II))
    (PP/p1 (for_IF her_APP$ actions_NN2)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((Who_PNQS
  (does_VDZ
   (she_PPHS1
    ((answer_VV0 ((to_II))) ((for_IF (her_APP$ (actions_NN2))))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (does_VDZ
   (she_PPHS1
    ((answer_VV0 ((to_II))) ((for_IF (her_APP$ (actions_NN2))))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS does_VDZ she_PPHS1 answer_VV0 for_IF her_APP$ actions_NN2 to_II ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS does_VDZ she_PPHS1)
     (answer_VV0 for_IF her_APP$ actions_NN2 to_II))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (does_VDZ she_PPHS1 answer_VV0 for_IF her_APP$ actions_NN2 to_II))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp she_PPHS1
    (V1/vp_pp (answer_VV0 for_IF her_APP$ actions_NN2) (to_II)))
2: (S/np_vp she_PPHS1
    (V1/v_pp_pp answer_VV0 (for_IF her_APP$ actions_NN2) (to_II)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((Who_PNQS
  (does_VDZ
   (she_PPHS1
    (answer_VV0 ((for_IF (her_APP$ (actions_NN2)))) ((to_II))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (does_VDZ
   (she_PPHS1
    (answer_VV0 ((for_IF (her_APP$ (actions_NN2)))) ((to_II))))))
 (?_?))

Accept tree? y


----------------
Where_RRQ did_VDD she_PPHS1 end_VV0 up_RP ?_?

1: (S/np_vp she_PPHS1 (V1/vp_advp (end_VV0) (up_RP)))
2: (S/np_vp she_PPHS1 (V1/v (end_VV0 up_RP)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((((Where_RRQ)) (did_VDD (she_PPHS1 ((end_VV0 up_RP))))) (?_?))

Is the tree OK? y

1 parses

((((Where_RRQ)) (did_VDD (she_PPHS1 ((end_VV0 up_RP))))) (?_?))

Accept tree? y


----------------
Where_RRQ was_VBDZ her_APP$ abacus_NN1 put_VV0 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Where_RRQ was_VBDZ her_APP$ abacus_NN1) (put_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/pp_vp-r (Where_RRQ) (was_VBDZ her_APP$ abacus_NN1 put_VV0))
    (End-punct1/--- ?_?))
3: (T/txt-sc1/+
    (S/pp-wh_s-be (Where_RRQ) (was_VBDZ her_APP$ abacus_NN1 put_VV0))
    (End-punct1/--- ?_?))
4: (T/txt-sc1/+
    (S/pp-wh_s (Where_RRQ) (was_VBDZ her_APP$ abacus_NN1 put_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 4 / undo / gde / restart / skip / finish)? 4

Tree selected:

((((Where_RRQ)) (was_VBDZ ((her_APP$ (abacus_NN1)) (put_VV0)))) (?_?))

Is the tree OK? y

1 parses

((((Where_RRQ)) (was_VBDZ ((her_APP$ (abacus_NN1)) (put_VV0)))) (?_?))

Accept tree? y


----------------
Where_RRQ did_VDD she_PPHS1 put_VVD her_APP$ abacus_NN1 ?_?

Tree selected:

((((Where_RRQ))
  (did_VDD (she_PPHS1 (put_VVD (her_APP$ (abacus_NN1))))))
 (?_?))

Is the tree OK? y

1 parses

((((Where_RRQ))
  (did_VDD (she_PPHS1 (put_VVD (her_APP$ (abacus_NN1))))))
 (?_?))

Accept tree? y


----------------
What_DDQ did_VDD it_PPH1 cost_VV0 ?_?

1: (T/txt-sc1/+ (S/s-wh_vp-r (What_DDQ did_VDD it_PPH1) (cost_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+ (S/np-wh_s-gap What_DDQ (did_VDD it_PPH1 cost_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((What_DDQ (did_VDD (it_PPH1 (cost_VV0)))) (?_?))

Is the tree OK? y

1 parses

((What_DDQ (did_VDD (it_PPH1 (cost_VV0)))) (?_?))

Accept tree? y


----------------
What_DDQ did_VDD it_PPH1 cost_VVD her_PPHO1 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (What_DDQ did_VDD it_PPH1) (cost_VVD her_PPHO1))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap What_DDQ (did_VDD it_PPH1 cost_VVD her_PPHO1))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((What_DDQ (did_VDD (it_PPH1 (cost_VVD her_PPHO1)))) (?_?))

Is the tree OK? y

1 parses

((What_DDQ (did_VDD (it_PPH1 (cost_VVD her_PPHO1)))) (?_?))

Accept tree? y


----------------
How_RGQ well_RR did_VDD his_APP$ message_NN1 come_VVN across_RP ?_?

1: (T/txt-sc1/+
    (S/pp_vp-r (How_RGQ)
     (well_RR did_VDD his_APP$ message_NN1 come_VVN across_RP))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/pp-wh_s (How_RGQ)
     (well_RR did_VDD his_APP$ message_NN1 come_VVN across_RP))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp (NP/det_n1 his_APP$ (message_NN1))
    (V1/v (come_VVN across_RP)))
2: (S/np_vp (NP/det_n1 his_APP$ (message_NN1))
    (V1/vp_advp (come_VVN) (across_RP)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 1

Tree selected:

((((How_RGQ))
  (((well_RR))
   (did_VDD ((his_APP$ (message_NN1)) ((come_VVN across_RP))))))
 (?_?))

Is the tree OK? y

1 parses

((((How_RGQ))
  (((well_RR))
   (did_VDD ((his_APP$ (message_NN1)) ((come_VVN across_RP))))))
 (?_?))

Accept tree? y


----------------
What_DDQ did_VDD she_PPHS1 anticipate_VV0 that_CST he_PPHS1 would_VM do_VD0 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (What_DDQ did_VDD she_PPHS1)
     (anticipate_VV0 that_CST he_PPHS1 would_VM do_VD0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap What_DDQ
     (did_VDD she_PPHS1 anticipate_VV0 that_CST he_PPHS1 would_VM
      do_VD0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((What_DDQ
  (did_VDD
   (she_PPHS1
    (anticipate_VV0 (that_CST (he_PPHS1 (would_VM (do_VD0))))))))
 (?_?))

Is the tree OK? y

1 parses

((What_DDQ
  (did_VDD
   (she_PPHS1
    (anticipate_VV0 (that_CST (he_PPHS1 (would_VM (do_VD0))))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS did_VDD she_PPHS1 anticipate_VV0 would_VM help_VV0 ?_?

Tree selected:

(((Who_PNQS (did_VDD (she_PPHS1 (anticipate_VV0))))
  (would_VM (help_VV0)))
 (?_?))

Is the tree OK? y

1 parses

(((Who_PNQS (did_VDD (she_PPHS1 (anticipate_VV0))))
  (would_VM (help_VV0)))
 (?_?))

Accept tree? y


----------------
What_DDQ did_VDD she_PPHS1 let_VVD on_RP that_CST she_PPHS1 would_VM do_VD0 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (What_DDQ did_VDD she_PPHS1)
     (let_VVD on_RP that_CST she_PPHS1 would_VM do_VD0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap What_DDQ
     (did_VDD she_PPHS1 let_VVD on_RP that_CST she_PPHS1 would_VM
      do_VD0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((What_DDQ
  (did_VDD
   (she_PPHS1
    ((let_VVD on_RP) (that_CST (she_PPHS1 (would_VM (do_VD0))))))))
 (?_?))

Is the tree OK? y

1 parses

((What_DDQ
  (did_VDD
   (she_PPHS1
    ((let_VVD on_RP) (that_CST (she_PPHS1 (would_VM (do_VD0))))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS did_VDD she_PPHS1 let_VVD on_RP would_VM help_VV0 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD she_PPHS1 let_VVD on_RP)
     (would_VM help_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD she_PPHS1 let_VVD)
     (on_RP would_VM help_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? skip

No parses


----------------
Who_PNQS does_VDZ it_PPH1 turn_VV0 out_RP that_CST she_PPHS1 knows_VVZ ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS does_VDZ it_PPH1)
     (turn_VV0 out_RP that_CST she_PPHS1 knows_VVZ))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (does_VDZ it_PPH1 turn_VV0 out_RP that_CST she_PPHS1 knows_VVZ))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((Who_PNQS
  (does_VDZ
   (it_PPH1 ((turn_VV0 out_RP) (that_CST (she_PPHS1 (knows_VVZ)))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (does_VDZ
   (it_PPH1 ((turn_VV0 out_RP) (that_CST (she_PPHS1 (knows_VVZ)))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS does_VDZ it_PPH1 turn_VV0 out_RP knows_VVZ her_PPHO1 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS does_VDZ it_PPH1 turn_VV0 out_RP)
     (knows_VVZ her_PPHO1))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS does_VDZ it_PPH1 turn_VV0)
     (out_RP knows_VVZ her_PPHO1))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? skip

No parses


----------------
Who_PNQS did_VDD she_PPHS1 promise_VV0 them_PPHO2 that_CST she_PPHS1 would_VM help_VV0 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD she_PPHS1)
     (promise_VV0 them_PPHO2 that_CST she_PPHS1 would_VM help_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (did_VDD she_PPHS1 promise_VV0 them_PPHO2 that_CST she_PPHS1
      would_VM help_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp she_PPHS1
    (V1/v_np_s promise_VV0 them_PPHO2
     (that_CST she_PPHS1 would_VM help_VV0)))
2: (S/np_vp she_PPHS1
    (V1/v_np-pro promise_VV0
     (them_PPHO2 that_CST she_PPHS1 would_VM help_VV0)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 1

Tree selected:

((Who_PNQS
  (did_VDD
   (she_PPHS1
    (promise_VV0 them_PPHO2
     (that_CST (she_PPHS1 (would_VM (help_VV0))))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (did_VDD
   (she_PPHS1
    (promise_VV0 them_PPHO2
     (that_CST (she_PPHS1 (would_VM (help_VV0))))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS did_VDD she_PPHS1 promise_VV0 that_CST she_PPHS1 would_VM help_VV0 him_PPHO1 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD she_PPHS1)
     (promise_VV0 that_CST she_PPHS1 would_VM help_VV0 him_PPHO1))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (did_VDD she_PPHS1 promise_VV0 that_CST she_PPHS1 would_VM
      help_VV0 him_PPHO1))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((Who_PNQS
  (did_VDD
   (she_PPHS1
    (promise_VV0
     (that_CST (she_PPHS1 (would_VM (help_VV0 him_PPHO1))))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (did_VDD
   (she_PPHS1
    (promise_VV0
     (that_CST (she_PPHS1 (would_VM (help_VV0 him_PPHO1))))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS does_VDZ it_PPH1 amuse_VV0 them_PPHO2 that_CST she_PPHS1 wo_VM n't_XX help_VV0 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS does_VDZ it_PPH1)
     (amuse_VV0 them_PPHO2 that_CST she_PPHS1 wo_VM n't_XX help_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (does_VDZ it_PPH1 amuse_VV0 them_PPHO2 that_CST she_PPHS1 wo_VM
      n't_XX help_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp it_PPH1
    (V1/v_np_s amuse_VV0 them_PPHO2
     (that_CST she_PPHS1 wo_VM n't_XX help_VV0)))
2: (S/np_vp it_PPH1
    (V1/v_np-pro amuse_VV0
     (them_PPHO2 that_CST she_PPHS1 wo_VM n't_XX help_VV0)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 1

Tree selected:

((Who_PNQS
  (does_VDZ
   (it_PPH1
    (amuse_VV0 them_PPHO2
     (that_CST (she_PPHS1 (wo_VM (n't_XX (help_VV0)))))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (does_VDZ
   (it_PPH1
    (amuse_VV0 them_PPHO2
     (that_CST (she_PPHS1 (wo_VM (n't_XX (help_VV0)))))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS does_VDZ it_PPH1 amuse_VV0 that_CST he_PPHS1 wo_VM n't_XX help_VV0 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS does_VDZ it_PPH1)
     (amuse_VV0 that_CST he_PPHS1 wo_VM n't_XX help_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (does_VDZ it_PPH1 amuse_VV0 that_CST he_PPHS1 wo_VM n't_XX
      help_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((Who_PNQS
  (does_VDZ
   (it_PPH1
    (amuse_VV0 (that_CST (he_PPHS1 (wo_VM (n't_XX (help_VV0)))))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (does_VDZ
   (it_PPH1
    (amuse_VV0 (that_CST (he_PPHS1 (wo_VM (n't_XX (help_VV0)))))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS does_VDZ it_PPH1 amuse_VV0 them_PPHO2 wo_VM n't_XX help_VV0 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS does_VDZ it_PPH1 amuse_VV0 them_PPHO2)
     (wo_VM n't_XX help_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (does_VDZ it_PPH1 amuse_VV0 them_PPHO2 wo_VM n't_XX help_VV0))
    (End-punct1/--- ?_?))
3: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS does_VDZ it_PPH1)
     (amuse_VV0 them_PPHO2 wo_VM n't_XX help_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? 2

Tree selected:

((Who_PNQS
  (does_VDZ
   (it_PPH1 (amuse_VV0 (them_PPHO2 (wo_VM (n't_XX (help_VV0))))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (does_VDZ
   (it_PPH1 (amuse_VV0 (them_PPHO2 (wo_VM (n't_XX (help_VV0))))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS did_VDD it_PPH1 dawn_NN1 on_II him_PPHO1 that_CST he_PPHS1 should_VM help_VV0 ?_?

1: (S/np-wh_vp Who_PNQS
    (V1/do_np/-- did_VDD
     (it_PPH1 dawn_NN1 on_II him_PPHO1 that_CST he_PPHS1 should_VM
      help_VV0)))
2: (S/np-wh_vp Who_PNQS
    (V1/vp_pp (did_VDD it_PPH1 dawn_NN1)
     (on_II him_PPHO1 that_CST he_PPHS1 should_VM help_VV0)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? skip

No parses


----------------
Who_PNQS does_VDZ it_PPH1 matter_VV0 to_II her_PPHO1 that_CST she_PPHS1 should_VM help_VV0 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS does_VDZ it_PPH1)
     (matter_VV0 to_II her_PPHO1 that_CST she_PPHS1 should_VM
      help_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (does_VDZ it_PPH1 matter_VV0 to_II her_PPHO1 that_CST she_PPHS1
      should_VM help_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp it_PPH1
    (V1/v_pp matter_VV0
     (to_II her_PPHO1 that_CST she_PPHS1 should_VM help_VV0)))
2: (S/np_vp it_PPH1
    (V1/v_pp_s matter_VV0 (to_II her_PPHO1)
     (that_CST she_PPHS1 should_VM help_VV0)))
3: (S/np_vp it_PPH1
    (V1/vp_pp (matter_VV0)
     (to_II her_PPHO1 that_CST she_PPHS1 should_VM help_VV0)))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? 2

Tree selected:

((Who_PNQS
  (does_VDZ
   (it_PPH1
    (matter_VV0 ((to_II her_PPHO1))
     (that_CST (she_PPHS1 (should_VM (help_VV0))))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (does_VDZ
   (it_PPH1
    (matter_VV0 ((to_II her_PPHO1))
     (that_CST (she_PPHS1 (should_VM (help_VV0))))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS did_VDD he_PPHS1 bet_VVD his_APP$ abacus_NN1 that_CST he_PPHS1 could_VM do_VD0 it_PPH1 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD he_PPHS1)
     (bet_VVD his_APP$ abacus_NN1 that_CST he_PPHS1 could_VM do_VD0
      it_PPH1))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (did_VDD he_PPHS1 bet_VVD his_APP$ abacus_NN1 that_CST he_PPHS1
      could_VM do_VD0 it_PPH1))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp he_PPHS1
    (V1/v_np bet_VVD
     (his_APP$ abacus_NN1 that_CST he_PPHS1 could_VM do_VD0 it_PPH1)))
2: (S/np_vp he_PPHS1
    (V1/v_np_s bet_VVD (his_APP$ abacus_NN1)
     (that_CST he_PPHS1 could_VM do_VD0 it_PPH1)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((Who_PNQS
  (did_VDD
   (he_PPHS1
    (bet_VVD (his_APP$ (abacus_NN1))
     (that_CST (he_PPHS1 (could_VM (do_VD0 it_PPH1))))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (did_VDD
   (he_PPHS1
    (bet_VVD (his_APP$ (abacus_NN1))
     (that_CST (he_PPHS1 (could_VM (do_VD0 it_PPH1))))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS did_VDD she_PPHS1 arrange_VV0 with_IW him_PPHO1 for_IF them_PPHO2 to_TO help_VV0 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD she_PPHS1)
     (arrange_VV0 with_IW him_PPHO1 for_IF them_PPHO2 to_TO help_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (did_VDD she_PPHS1 arrange_VV0 with_IW him_PPHO1 for_IF them_PPHO2
      to_TO help_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp she_PPHS1
    (V1/vp_inf-r (arrange_VV0 with_IW him_PPHO1 for_IF them_PPHO2)
     (to_TO help_VV0)))
2: (S/np_vp she_PPHS1
    (V1/v_pp arrange_VV0
     (with_IW him_PPHO1 for_IF them_PPHO2 to_TO help_VV0)))
3: (S/np_vp she_PPHS1
    (V1/vp_pp (arrange_VV0 with_IW him_PPHO1)
     (for_IF them_PPHO2 to_TO help_VV0)))
4: (S/np_vp she_PPHS1
    (V1/vp_pp (arrange_VV0)
     (with_IW him_PPHO1 for_IF them_PPHO2 to_TO help_VV0)))
5: (S/np_vp she_PPHS1
    (V1/v_pp_pp arrange_VV0 (with_IW him_PPHO1)
     (for_IF them_PPHO2 to_TO help_VV0)))
6: (S/np_vp she_PPHS1
    (V1/v_pp_inf arrange_VV0 (with_IW him_PPHO1 for_IF them_PPHO2)
     (to_TO help_VV0)))
Which choice (1 - 6 / undo / gde / restart / skip / finish)? 5

1: (PP/p1 (P1/p_sinf for_IF them_PPHO2 (to_TO help_VV0)))
2: (PP/p1 (P1/p_np-pro for_IF (them_PPHO2 to_TO help_VV0)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 1

Tree selected:

((Who_PNQS
  (did_VDD
   (she_PPHS1
    (arrange_VV0 ((with_IW him_PPHO1))
     ((for_IF them_PPHO2 (to_TO (help_VV0))))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (did_VDD
   (she_PPHS1
    (arrange_VV0 ((with_IW him_PPHO1))
     ((for_IF them_PPHO2 (to_TO (help_VV0))))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS was_VBDZ he_PPHS1 petitioned_VVD that_CST he_PPHS1 help_VV0 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS was_VBDZ he_PPHS1)
     (petitioned_VVD that_CST he_PPHS1 help_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_vp Who_PNQS
     (was_VBDZ he_PPHS1 petitioned_VVD that_CST he_PPHS1 help_VV0))
    (End-punct1/--- ?_?))
3: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (was_VBDZ he_PPHS1 petitioned_VVD that_CST he_PPHS1 help_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? 3

Tree selected:

((Who_PNQS
  (was_VBDZ
   (he_PPHS1 (petitioned_VVD (that_CST (he_PPHS1 (help_VV0)))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (was_VBDZ
   (he_PPHS1 (petitioned_VVD (that_CST (he_PPHS1 (help_VV0)))))))
 (?_?))

Accept tree? y


----------------
By_II whom_PNQO was_VBDZ he_PPHS1 asked_VVD what_DDQ they_PPHS2 should_VM do_VD0 ?_?

1: (T/txt-ph1
    (Tph/pp/---
     (By_II whom_PNQO was_VBDZ he_PPHS1 asked_VVD what_DDQ they_PPHS2
      should_VM do_VD0))
    ?_?)
2: (T/txt-sc1/+
    (S/pp-np-wh_s (By_II whom_PNQO)
     (was_VBDZ he_PPHS1 asked_VVD what_DDQ they_PPHS2 should_VM
      do_VD0))
    (End-punct1/--- ?_?))
3: (T/txt-sc1/+
    (S/pp-sfin_s/- (By_II whom_PNQO was_VBDZ he_PPHS1 asked_VVD)
     (what_DDQ they_PPHS2 should_VM do_VD0))
    (End-punct1/--- ?_?))
4: (T/txt-sc1/+
    (S/pp-sfin_s/-
     (By_II whom_PNQO was_VBDZ he_PPHS1 asked_VVD what_DDQ)
     (they_PPHS2 should_VM do_VD0))
    (End-punct1/--- ?_?))
5: (T/txt-sc1/+
    (S/s-wh_vp-r
     (By_II whom_PNQO was_VBDZ he_PPHS1 asked_VVD what_DDQ they_PPHS2)
     (should_VM do_VD0))
    (End-punct1/--- ?_?))
6: (T/txt-sc1/+
    (S/pp_vp-r
     (By_II whom_PNQO was_VBDZ he_PPHS1 asked_VVD what_DDQ they_PPHS2)
     (should_VM do_VD0))
    (End-punct1/--- ?_?))
Which choice (1 - 6 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp he_PPHS1
    (V1/v_np_s asked_VVD what_DDQ (they_PPHS2 should_VM do_VD0)))
2: (S/np_vp he_PPHS1
    (V1/v_s asked_VVD (what_DDQ they_PPHS2 should_VM do_VD0)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((((By_II whom_PNQO))
  (was_VBDZ
   (he_PPHS1
    (asked_VVD (what_DDQ (they_PPHS2 (should_VM (do_VD0))))))))
 (?_?))

Is the tree OK? y

1 parses

((((By_II whom_PNQO))
  (was_VBDZ
   (he_PPHS1
    (asked_VVD (what_DDQ (they_PPHS2 (should_VM (do_VD0))))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS did_VDD they_PPHS2 ask_VV0 whether_CSW they_PPHS2 should_VM help_VV0 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD they_PPHS2)
     (ask_VV0 whether_CSW they_PPHS2 should_VM help_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (did_VDD they_PPHS2 ask_VV0 whether_CSW they_PPHS2 should_VM
      help_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp they_PPHS2
    (V1/v_pp ask_VV0 (whether_CSW they_PPHS2 should_VM help_VV0)))
2: (S/np_vp they_PPHS2
    (V1/vp_pp (ask_VV0) (whether_CSW they_PPHS2 should_VM help_VV0)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 1

Tree selected:

((Who_PNQS
  (did_VDD
   (they_PPHS2
    (ask_VV0 ((whether_CSW (they_PPHS2 (should_VM (help_VV0)))))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (did_VDD
   (they_PPHS2
    (ask_VV0 ((whether_CSW (they_PPHS2 (should_VM (help_VV0)))))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS did_VDD they_PPHS2 ask_VV0 what_DDQ to_TO do_VD0 ?_?

1: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (did_VDD they_PPHS2 ask_VV0 what_DDQ to_TO do_VD0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD they_PPHS2)
     (ask_VV0 what_DDQ to_TO do_VD0))
    (End-punct1/--- ?_?))
3: (T/txt-sc1/-
    (S/np-wh_s-gap Who_PNQS
     (did_VDD they_PPHS2 ask_VV0 what_DDQ to_TO do_VD0 ?_?)))
4: (T/txt-sc1/-
    (S/s-wh_vp-r (Who_PNQS did_VDD they_PPHS2)
     (ask_VV0 what_DDQ to_TO do_VD0 ?_?)))
Which choice (1 - 4 / undo / gde / restart / skip / finish)? 1

1: (S/np_vp they_PPHS2 (V1/vp_inf-r (ask_VV0 what_DDQ) (to_TO do_VD0)))
2: (S/np_vp they_PPHS2 (V1/v_np-pro ask_VV0 (what_DDQ to_TO do_VD0)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((Who_PNQS
  (did_VDD (they_PPHS2 (ask_VV0 (what_DDQ (to_TO (do_VD0)))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (did_VDD (they_PPHS2 (ask_VV0 (what_DDQ (to_TO (do_VD0)))))))
 (?_?))

Accept tree? y


----------------
How_RGQ confident_JJ did_VDD she_PPHS1 start_VV0 off_RP ?_?

1: (S/np_vp she_PPHS1 (V1/vp_advp (start_VV0) (off_RP)))
2: (S/np_vp she_PPHS1 (V1/v (start_VV0 off_RP)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((((How_RGQ (confident_JJ)))
  (did_VDD (she_PPHS1 ((start_VV0 off_RP)))))
 (?_?))

Is the tree OK? y

1 parses

((((How_RGQ (confident_JJ)))
  (did_VDD (she_PPHS1 ((start_VV0 off_RP)))))
 (?_?))

Accept tree? y


----------------
How_RGQ busy_JJ did_VDD she_PPHS1 look_VV0 ?_?

Tree selected:

((((How_RGQ (busy_JJ))) (did_VDD (she_PPHS1 (look_VV0)))) (?_?))

Is the tree OK? y

1 parses

((((How_RGQ (busy_JJ))) (did_VDD (she_PPHS1 (look_VV0)))) (?_?))

Accept tree? y


----------------
So_RG many_DA2 doubts_NN2 she_PPHS1 is_VBZ beginning_VVG to_TO have_VH0 !_!

1: (Tph/np/------
    (NP/a1-dg_np-r (So_RG)
     (many_DA2 doubts_NN2 she_PPHS1 is_VBZ beginning_VVG to_TO
      have_VH0)))
2: (Tph/np/------
    (NP/n1-plu
     (So_RG many_DA2 doubts_NN2 she_PPHS1 is_VBZ beginning_VVG to_TO
      have_VH0)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp she_PPHS1
    (V1/be_ing/-- is_VBZ (beginning_VVG to_TO have_VH0)))
2: (S/np_vp she_PPHS1
    (V1/vp_inf-r (is_VBZ beginning_VVG) (to_TO have_VH0)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 1

Tree selected:

((((((So_RG (many_DA2)))
    (doubts_NN2
     (she_PPHS1 (is_VBZ (beginning_VVG (to_TO (have_VH0)))))))))
 !_!)

Is the tree OK? y

1 parses

((((((So_RG (many_DA2)))
    (doubts_NN2
     (she_PPHS1 (is_VBZ (beginning_VVG (to_TO (have_VH0)))))))))
 !_!)

Accept tree? y


----------------
What_DDQ did_VDD she_PPHS1 set_VVD out_RP to_TO do_VD0 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (What_DDQ did_VDD she_PPHS1)
     (set_VVD out_RP to_TO do_VD0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap What_DDQ
     (did_VDD she_PPHS1 set_VVD out_RP to_TO do_VD0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp she_PPHS1 (V1/vp_inf-r (set_VVD out_RP) (to_TO do_VD0)))
2: (S/np_vp she_PPHS1 (V1/v_inf (set_VVD out_RP) (to_TO do_VD0)))
3: (S/np_vp she_PPHS1 (V1/v_inf set_VVD (out_RP to_TO do_VD0)))
4: (S/np_vp she_PPHS1 (V1/vp_inf-r (set_VVD) (out_RP to_TO do_VD0)))
Which choice (1 - 4 / undo / gde / restart / skip / finish)? 2

Tree selected:

((What_DDQ (did_VDD (she_PPHS1 ((set_VVD out_RP) (to_TO (do_VD0))))))
 (?_?))

Is the tree OK? y

1 parses

((What_DDQ (did_VDD (she_PPHS1 ((set_VVD out_RP) (to_TO (do_VD0))))))
 (?_?))

Accept tree? y


----------------
What_DDQ did_VDD she_PPHS1 start_VV0 doing_VDG ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (What_DDQ did_VDD she_PPHS1) (start_VV0 doing_VDG))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap What_DDQ (did_VDD she_PPHS1 start_VV0 doing_VDG))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((What_DDQ (did_VDD (she_PPHS1 (start_VV0 (doing_VDG))))) (?_?))

Is the tree OK? y

1 parses

((What_DDQ (did_VDD (she_PPHS1 (start_VV0 (doing_VDG))))) (?_?))

Accept tree? y


----------------
What_DDQ did_VDD she_PPHS1 carry_VV0 on_II doing_VDG ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (What_DDQ did_VDD she_PPHS1)
     (carry_VV0 on_II doing_VDG))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap What_DDQ
     (did_VDD she_PPHS1 carry_VV0 on_II doing_VDG))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp she_PPHS1 (V1/v_pp carry_VV0 (on_II doing_VDG)))
2: (S/np_vp she_PPHS1 (V1/vp_pp (carry_VV0) (on_II doing_VDG)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 1

Tree selected:

((What_DDQ (did_VDD (she_PPHS1 (carry_VV0 ((on_II (doing_VDG)))))))
 (?_?))

Is the tree OK? y

1 parses

((What_DDQ (did_VDD (she_PPHS1 (carry_VV0 ((on_II (doing_VDG)))))))
 (?_?))

Accept tree? y


----------------
What_DDQ was_VBDZ she_PPHS1 banking_NN1 on_II being_VBG able_JJ to_TO do_VD0 ?_?

1: (T/txt-sc1/+
    (S/np-wh_vp What_DDQ
     (was_VBDZ she_PPHS1 banking_NN1 on_II being_VBG able_JJ to_TO
      do_VD0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap What_DDQ
     (was_VBDZ she_PPHS1 banking_NN1 on_II being_VBG able_JJ to_TO
      do_VD0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? skip

No parses


----------------
Who_PNQS did_VDD he_PPHS1 get_VV0 abandoned_VVN by_II ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD he_PPHS1)
     (get_VV0 abandoned_VVN by_II))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (did_VDD he_PPHS1 get_VV0 abandoned_VVN by_II))
    (End-punct1/--- ?_?))
3: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD he_PPHS1 get_VV0)
     (abandoned_VVN by_II))
    (End-punct1/--- ?_?))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp he_PPHS1 (V1/v_ppart get_VV0 (abandoned_VVN by_II)))
2: (S/np_vp he_PPHS1 (V1/vp_pp (get_VV0 abandoned_VVN) (by_II)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 1

1: (V1/v_ppart get_VV0 (V1/v_pp abandoned_VVN (by_II)))
2: (V1/v_ppart get_VV0 (V1/vp_pp (abandoned_VVN) (by_II)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 1

Tree selected:

((Who_PNQS (did_VDD (he_PPHS1 (get_VV0 (abandoned_VVN ((by_II)))))))
 (?_?))

Is the tree OK? n
Restart selection process? y

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD he_PPHS1)
     (get_VV0 abandoned_VVN by_II))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (did_VDD he_PPHS1 get_VV0 abandoned_VVN by_II))
    (End-punct1/--- ?_?))
3: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD he_PPHS1 get_VV0)
     (abandoned_VVN by_II))
    (End-punct1/--- ?_?))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp he_PPHS1 (V1/v_ppart get_VV0 (abandoned_VVN by_II)))
2: (S/np_vp he_PPHS1 (V1/vp_pp (get_VV0 abandoned_VVN) (by_II)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((Who_PNQS (did_VDD (he_PPHS1 ((get_VV0 (abandoned_VVN)) ((by_II))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS (did_VDD (he_PPHS1 ((get_VV0 (abandoned_VVN)) ((by_II))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS did_VDD she_PPHS1 arrange_VV0 with_IW him_PPHO1 to_TO help_VV0 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD she_PPHS1)
     (arrange_VV0 with_IW him_PPHO1 to_TO help_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (did_VDD she_PPHS1 arrange_VV0 with_IW him_PPHO1 to_TO help_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp she_PPHS1
    (V1/v_pp arrange_VV0 (with_IW him_PPHO1 to_TO help_VV0)))
2: (S/np_vp she_PPHS1
    (V1/vp_inf-r (arrange_VV0 with_IW him_PPHO1) (to_TO help_VV0)))
3: (S/np_vp she_PPHS1
    (V1/vp_pp (arrange_VV0) (with_IW him_PPHO1 to_TO help_VV0)))
4: (S/np_vp she_PPHS1
    (V1/v_pp_inf arrange_VV0 (with_IW him_PPHO1) (to_TO help_VV0)))
Which choice (1 - 4 / undo / gde / restart / skip / finish)? 4

Tree selected:

((Who_PNQS
  (did_VDD
   (she_PPHS1 (arrange_VV0 ((with_IW him_PPHO1)) (to_TO (help_VV0))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (did_VDD
   (she_PPHS1 (arrange_VV0 ((with_IW him_PPHO1)) (to_TO (help_VV0))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS did_VDD she_PPHS1 arrange_VV0 with_IW to_II help_VV0 them_PPHO2 ?_?

1: (V1/vp_pp (V1/v_pp arrange_VV0 (with_IW)) (PP/p1 (to_II)))
2: (V1/vp_pp (V1/vp_pp (arrange_VV0) (with_IW)) (PP/p1 (to_II)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? skip

No parses


----------------
Who_PNQS did_VDD she_PPHS1 promise_VV0 them_PPHO2 to_TO help_VV0 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD she_PPHS1)
     (promise_VV0 them_PPHO2 to_TO help_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (did_VDD she_PPHS1 promise_VV0 them_PPHO2 to_TO help_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp she_PPHS1
    (V1/v_np_inf promise_VV0 them_PPHO2 (to_TO help_VV0)))
2: (S/np_vp she_PPHS1
    (V1/vp_inf-r (promise_VV0 them_PPHO2) (to_TO help_VV0)))
3: (S/np_vp she_PPHS1
    (V1/v_np-pro promise_VV0 (them_PPHO2 to_TO help_VV0)))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? 1

Tree selected:

((Who_PNQS
  (did_VDD (she_PPHS1 (promise_VV0 them_PPHO2 (to_TO (help_VV0))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (did_VDD (she_PPHS1 (promise_VV0 them_PPHO2 (to_TO (help_VV0))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS did_VDD she_PPHS1 promise_VV0 to_TO help_VV0 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD she_PPHS1)
     (promise_VV0 to_TO help_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (did_VDD she_PPHS1 promise_VV0 to_TO help_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp she_PPHS1 (V1/v_inf promise_VV0 (to_TO help_VV0)))
2: (S/np_vp she_PPHS1 (V1/vp_inf-r (promise_VV0) (to_TO help_VV0)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 1

Tree selected:

((Who_PNQS (did_VDD (she_PPHS1 (promise_VV0 (to_TO (help_VV0))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS (did_VDD (she_PPHS1 (promise_VV0 (to_TO (help_VV0))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS does_VDZ he_PPHS1 strike_VV0 as_CSA crazy_JJ ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS does_VDZ he_PPHS1)
     (strike_VV0 as_CSA crazy_JJ))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (does_VDZ he_PPHS1 strike_VV0 as_CSA crazy_JJ))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp he_PPHS1 (V1/v_pp strike_VV0 (as_CSA crazy_JJ)))
2: (S/np_vp he_PPHS1 (V1/vp_pp (strike_VV0) (as_CSA crazy_JJ)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 1

1: (PP/p1 (P1/p_a1-r as_CSA (crazy_JJ)))
2: (PP/p1 (P1/as_ap as_CSA (crazy_JJ)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((Who_PNQS (does_VDZ (he_PPHS1 (strike_VV0 ((as_CSA ((crazy_JJ))))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS (does_VDZ (he_PPHS1 (strike_VV0 ((as_CSA ((crazy_JJ))))))))
 (?_?))

Accept tree? y


----------------
What_DDQ does_VDZ he_PPHS1 strike_VV0 you_PPY as_CSA ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (What_DDQ does_VDZ he_PPHS1)
     (strike_VV0 you_PPY as_CSA))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap What_DDQ
     (does_VDZ he_PPHS1 strike_VV0 you_PPY as_CSA))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp he_PPHS1 (V1/vp_pp (strike_VV0 you_PPY) (as_CSA)))
2: (S/np_vp he_PPHS1 (V1/v_np_pp strike_VV0 you_PPY (as_CSA)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((What_DDQ (does_VDZ (he_PPHS1 (strike_VV0 you_PPY ((as_CSA)))))) (?_?))

Is the tree OK? y

1 parses

((What_DDQ (does_VDZ (he_PPHS1 (strike_VV0 you_PPY ((as_CSA)))))) (?_?))

Accept tree? y


----------------
How_RGQ crazy_JJ does_VDZ she_PPHS1 make_VV0 him_PPHO1 out_RP ?_?

1: (S/np_vp she_PPHS1 (V1/vp_advp (make_VV0 him_PPHO1) (out_RP)))
2: (S/np_vp she_PPHS1 (V1/v_npro_prt make_VV0 him_PPHO1 out_RP))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((((How_RGQ (crazy_JJ)))
  (does_VDZ (she_PPHS1 (make_VV0 him_PPHO1 out_RP))))
 (?_?))

Is the tree OK? y

1 parses

((((How_RGQ (crazy_JJ)))
  (does_VDZ (she_PPHS1 (make_VV0 him_PPHO1 out_RP))))
 (?_?))

Accept tree? y


----------------
What_DDQ does_VDZ she_PPHS1 know_VV0 him_PPHO1 to_TO be_VB0 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (What_DDQ does_VDZ she_PPHS1)
     (know_VV0 him_PPHO1 to_TO be_VB0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap What_DDQ
     (does_VDZ she_PPHS1 know_VV0 him_PPHO1 to_TO be_VB0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp she_PPHS1 (V1/v_np_inf know_VV0 him_PPHO1 (to_TO be_VB0)))
2: (S/np_vp she_PPHS1 (V1/vp_inf-r (know_VV0 him_PPHO1) (to_TO be_VB0)))
3: (S/np_vp she_PPHS1 (V1/v_np-pro know_VV0 (him_PPHO1 to_TO be_VB0)))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? 1

Tree selected:

((What_DDQ
  (does_VDZ (she_PPHS1 (know_VV0 him_PPHO1 (to_TO (be_VB0))))))
 (?_?))

Is the tree OK? y

1 parses

((What_DDQ
  (does_VDZ (she_PPHS1 (know_VV0 him_PPHO1 (to_TO (be_VB0))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS does_VDZ she_PPHS1 know_VV0 to_TO be_VB0 crazy_JJ ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS does_VDZ she_PPHS1)
     (know_VV0 to_TO be_VB0 crazy_JJ))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (does_VDZ she_PPHS1 know_VV0 to_TO be_VB0 crazy_JJ))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp she_PPHS1 (V1/v_inf know_VV0 (to_TO be_VB0 crazy_JJ)))
2: (S/np_vp she_PPHS1 (V1/vp_inf-r (know_VV0) (to_TO be_VB0 crazy_JJ)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 1

Tree selected:

((Who_PNQS
  (does_VDZ (she_PPHS1 (know_VV0 (to_TO (be_VB0 ((crazy_JJ))))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (does_VDZ (she_PPHS1 (know_VV0 (to_TO (be_VB0 ((crazy_JJ))))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS does_VDZ she_PPHS1 look_VV0 to_II to_TO help_VV0 her_PPHO1 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS does_VDZ she_PPHS1)
     (look_VV0 to_II to_TO help_VV0 her_PPHO1))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (does_VDZ she_PPHS1 look_VV0 to_II to_TO help_VV0 her_PPHO1))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp she_PPHS1
    (V1/vp_inf-r (look_VV0 to_II) (to_TO help_VV0 her_PPHO1)))
2: (S/np_vp she_PPHS1
    (V1/v_pp look_VV0 (to_II to_TO help_VV0 her_PPHO1)))
3: (S/np_vp she_PPHS1
    (V1/vp_pp (look_VV0) (to_II to_TO help_VV0 her_PPHO1)))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? skip

No parses


----------------
What_DDQ did_VDD she_PPHS1 appeal_VV0 to_II him_PPHO1 to_TO do_VD0 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (What_DDQ did_VDD she_PPHS1)
     (appeal_VV0 to_II him_PPHO1 to_TO do_VD0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap What_DDQ
     (did_VDD she_PPHS1 appeal_VV0 to_II him_PPHO1 to_TO do_VD0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 1

1: (S/s-wh_vp-r (S/np-wh_vp What_DDQ (did_VDD she_PPHS1))
    (V1/vp_pp (appeal_VV0) (to_II him_PPHO1 to_TO do_VD0)))
2: (S/s-wh_vp-r (S/np-wh_vp What_DDQ (did_VDD she_PPHS1))
    (V1/vp_inf-r (appeal_VV0 to_II him_PPHO1) (to_TO do_VD0)))
3: (S/s-wh_vp-r (S/np-wh_vp What_DDQ (did_VDD she_PPHS1))
    (V1/v_pp appeal_VV0 (to_II him_PPHO1 to_TO do_VD0)))
4: (S/s-wh_vp-r (S/np-wh_vp What_DDQ (did_VDD she_PPHS1))
    (V1/v_pp_inf appeal_VV0 (to_II him_PPHO1) (to_TO do_VD0)))
Which choice (1 - 4 / undo / gde / restart / skip / finish)? skip

No parses


----------------
What_DDQ does_VDZ it_PPH1 hurt_VVD her_PPHO1 to_TO do_VD0 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (What_DDQ does_VDZ it_PPH1)
     (hurt_VVD her_PPHO1 to_TO do_VD0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap What_DDQ
     (does_VDZ it_PPH1 hurt_VVD her_PPHO1 to_TO do_VD0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp it_PPH1 (V1/v_np_inf hurt_VVD her_PPHO1 (to_TO do_VD0)))
2: (S/np_vp it_PPH1 (V1/vp_inf-r (hurt_VVD her_PPHO1) (to_TO do_VD0)))
3: (S/np_vp it_PPH1 (V1/v_np-pro hurt_VVD (her_PPHO1 to_TO do_VD0)))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? 1

Tree selected:

((What_DDQ (does_VDZ (it_PPH1 (hurt_VVD her_PPHO1 (to_TO (do_VD0))))))
 (?_?))

Is the tree OK? y

1 parses

((What_DDQ (does_VDZ (it_PPH1 (hurt_VVD her_PPHO1 (to_TO (do_VD0))))))
 (?_?))

Accept tree? y


----------------
What_DDQ did_VDD she_PPHS1 anticipate_VV0 him_PPHO1 doing_NN1 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (What_DDQ did_VDD she_PPHS1)
     (anticipate_VV0 him_PPHO1 doing_NN1))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap What_DDQ
     (did_VDD she_PPHS1 anticipate_VV0 him_PPHO1 doing_NN1))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((What_DDQ
  (did_VDD (she_PPHS1 (anticipate_VV0 (him_PPHO1 doing_NN1)))))
 (?_?))

Is the tree OK? y

1 parses

((What_DDQ
  (did_VDD (she_PPHS1 (anticipate_VV0 (him_PPHO1 doing_NN1)))))
 (?_?))

Accept tree? y


----------------
Who_PNQS did_VDD she_PPHS1 anticipate_VV0 helping_VVG ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD she_PPHS1)
     (anticipate_VV0 helping_VVG))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (did_VDD she_PPHS1 anticipate_VV0 helping_VVG))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((Who_PNQS (did_VDD (she_PPHS1 (anticipate_VV0 (helping_VVG))))) (?_?))

Is the tree OK? y

1 parses

((Who_PNQS (did_VDD (she_PPHS1 (anticipate_VV0 (helping_VVG))))) (?_?))

Accept tree? y


----------------
What_DDQ did_VDD she_PPHS1 let_VVD him_PPHO1 off_II doing_VDG ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (What_DDQ did_VDD she_PPHS1)
     (let_VVD him_PPHO1 off_II doing_VDG))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap What_DDQ
     (did_VDD she_PPHS1 let_VVD him_PPHO1 off_II doing_VDG))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp she_PPHS1 (V1/v_np_pp let_VVD him_PPHO1 (off_II doing_VDG)))
2: (S/np_vp she_PPHS1 (V1/vp_pp (let_VVD him_PPHO1) (off_II doing_VDG)))
3: (S/np_vp she_PPHS1
    (V1/v_np-pro let_VVD (him_PPHO1 off_II doing_VDG)))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? 1

Tree selected:

((What_DDQ
  (did_VDD (she_PPHS1 (let_VVD him_PPHO1 ((off_II (doing_VDG)))))))
 (?_?))

Is the tree OK? y

1 parses

((What_DDQ
  (did_VDD (she_PPHS1 (let_VVD him_PPHO1 ((off_II (doing_VDG)))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS could_VM she_PPHS1 hear_VV0 apologizing_VVG ?_?

Tree selected:

((Who_PNQS (could_VM (she_PPHS1 (hear_VV0 (apologizing_VVG))))) (?_?))

Is the tree OK? y

1 parses

((Who_PNQS (could_VM (she_PPHS1 (hear_VV0 (apologizing_VVG))))) (?_?))

Accept tree? y


----------------
Who_PNQS did_VDD she_PPHS1 make_VV0 him_PPHO1 help_VV0 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD she_PPHS1)
     (make_VV0 him_PPHO1 help_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD she_PPHS1 make_VV0 him_PPHO1)
     (help_VV0))
    (End-punct1/--- ?_?))
3: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (did_VDD she_PPHS1 make_VV0 him_PPHO1 help_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? 3

Tree selected:

((Who_PNQS (did_VDD (she_PPHS1 (make_VV0 (him_PPHO1 (help_VV0))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS (did_VDD (she_PPHS1 (make_VV0 (him_PPHO1 (help_VV0))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS did_VDD she_PPHS1 see_VV0 help_VV0 the_AT abbot_NN1 ?_?

1: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (did_VDD she_PPHS1 see_VV0 help_VV0 the_AT abbot_NN1))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD she_PPHS1)
     (see_VV0 help_VV0 the_AT abbot_NN1))
    (End-punct1/--- ?_?))
3: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD she_PPHS1 see_VV0)
     (help_VV0 the_AT abbot_NN1))
    (End-punct1/--- ?_?))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? 1

Tree selected:

((Who_PNQS
  (did_VDD (she_PPHS1 (see_VV0 (help_VV0 (the_AT (abbot_NN1)))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (did_VDD (she_PPHS1 (see_VV0 (help_VV0 (the_AT (abbot_NN1)))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS did_VDD she_PPHS1 get_VV0 them_PPHO2 accepted_VVN by_II ?_?

1: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (did_VDD she_PPHS1 get_VV0 them_PPHO2 accepted_VVN by_II))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD she_PPHS1)
     (get_VV0 them_PPHO2 accepted_VVN by_II))
    (End-punct1/--- ?_?))
3: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD she_PPHS1 get_VV0 them_PPHO2)
     (accepted_VVN by_II))
    (End-punct1/--- ?_?))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? 1

1: (S/np_vp she_PPHS1 (V1/v_s get_VV0 (them_PPHO2 accepted_VVN by_II)))
2: (S/np_vp she_PPHS1
    (V1/vp_pp (get_VV0 them_PPHO2 accepted_VVN) (by_II)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((Who_PNQS
  (did_VDD
   (she_PPHS1 ((get_VV0 (them_PPHO2 (accepted_VVN))) ((by_II))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (did_VDD
   (she_PPHS1 ((get_VV0 (them_PPHO2 (accepted_VVN))) ((by_II))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS did_VDD she_PPHS1 see_VV0 accepted_VVN by_II them_PPHO2 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD she_PPHS1)
     (see_VV0 accepted_VVN by_II them_PPHO2))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (did_VDD she_PPHS1 see_VV0 accepted_VVN by_II them_PPHO2))
    (End-punct1/--- ?_?))
3: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS did_VDD she_PPHS1 see_VV0)
     (accepted_VVN by_II them_PPHO2))
    (End-punct1/--- ?_?))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp she_PPHS1
    (V1/v_ppart see_VV0 (accepted_VVN by_II them_PPHO2)))
2: (S/np_vp she_PPHS1
    (V1/vp_pp (see_VV0 accepted_VVN) (by_II them_PPHO2)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((Who_PNQS
  (did_VDD
   (she_PPHS1 ((see_VV0 (accepted_VVN)) ((by_II them_PPHO2))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (did_VDD
   (she_PPHS1 ((see_VV0 (accepted_VVN)) ((by_II them_PPHO2))))))
 (?_?))

Accept tree? y


----------------
What_DDQ does_VDZ it_PPH1 hurt_VVD to_TO see_VV0 ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (What_DDQ does_VDZ it_PPH1) (hurt_VVD to_TO see_VV0))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_s-gap What_DDQ (does_VDZ it_PPH1 hurt_VVD to_TO see_VV0))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

1: (S/np_vp it_PPH1 (V1/v_inf hurt_VVD (to_TO see_VV0)))
2: (S/np_vp it_PPH1 (V1/vp_inf-r (hurt_VVD) (to_TO see_VV0)))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 1

Tree selected:

((What_DDQ (does_VDZ (it_PPH1 (hurt_VVD (to_TO (see_VV0)))))) (?_?))

Is the tree OK? y

1 parses

((What_DDQ (does_VDZ (it_PPH1 (hurt_VVD (to_TO (see_VV0)))))) (?_?))

Accept tree? y


----------------
Which_DDQ abbey_NN1 is_VBZ he_PPHS1 in_II ?_?

1: (T/txt-sc1/+
    (S/np-wh_s-gap Which_DDQ (abbey_NN1 is_VBZ he_PPHS1 in_II))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_vp (Which_DDQ abbey_NN1) (is_VBZ he_PPHS1 in_II))
    (End-punct1/--- ?_?))
3: (T/txt-sc1/+
    (S/np-wh_s-gap (Which_DDQ abbey_NN1) (is_VBZ he_PPHS1 in_II))
    (End-punct1/--- ?_?))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? 3

Tree selected:

(((Which_DDQ (abbey_NN1)) (is_VBZ he_PPHS1 ((in_II)))) (?_?))

Is the tree OK? y

1 parses

(((Which_DDQ (abbey_NN1)) (is_VBZ he_PPHS1 ((in_II)))) (?_?))

Accept tree? y


----------------
In_II which_DDQ abbey_NN1 is_VBZ he_PPHS1 ?_?

1: (T/txt-ph1 (Tph/pp/--- (In_II which_DDQ abbey_NN1 is_VBZ he_PPHS1))
    ?_?)
2: (T/txt-sc1/+
    (S/pp-np-wh_s (In_II which_DDQ) (abbey_NN1 is_VBZ he_PPHS1))
    (End-punct1/--- ?_?))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? skip

No parses


----------------
What_DDQ is_VBZ he_PPHS1 likely_RR to_TO do_VD0 ?_?

1: (S/np-wh_vp What_DDQ
    (V1/be_np/---- is_VBZ (he_PPHS1 likely_RR to_TO do_VD0)))
2: (S/np-wh_vp What_DDQ
    (V1/vp_inf-r (is_VBZ he_PPHS1 likely_RR) (to_TO do_VD0)))
3: (S/np-wh_vp What_DDQ
    (V1/vp_inf-r (is_VBZ he_PPHS1) (likely_RR to_TO do_VD0)))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? skip

No parses


----------------
How_RGQ crazy_JJ is_VBZ he_PPHS1 ?_?

Tree selected:

((((How_RGQ (crazy_JJ))) (is_VBZ he_PPHS1)) (?_?))

Is the tree OK? y

1 parses

((((How_RGQ (crazy_JJ))) (is_VBZ he_PPHS1)) (?_?))

Accept tree? y


----------------
What_DDQ was_VBDZ there_RL a_AT1 message_NN1 about_II ?_?

Tree selected:

((What_DDQ
  ((was_VBDZ ((there_RL)) (a_AT1 (message_NN1))) ((about_II))))
 (?_?))

Is the tree OK? y

1 parses

((What_DDQ
  ((was_VBDZ ((there_RL)) (a_AT1 (message_NN1))) ((about_II))))
 (?_?))

Accept tree? y


----------------
What_DDQ was_VBDZ there_RL ?_?

1: (S/np-wh_vp What_DDQ (V1/vp_advp (was_VBDZ) (there_RL)))
2: (S/np-wh_vp What_DDQ (V1/be_prt/- was_VBDZ there_RL))
Which choice (1 - 2 / undo / gde / restart / skip / finish)? 2

Tree selected:

((What_DDQ (was_VBDZ there_RL)) (?_?))

Is the tree OK? y

1 parses

((What_DDQ (was_VBDZ there_RL)) (?_?))

Accept tree? y


----------------
Who_PNQS was_VBDZ it_PPH1 that_CST he_PPHS1 helped_VVD ?_?

Tree selected:

((Who_PNQS (was_VBDZ (it_PPH1 (that_CST (he_PPHS1 (helped_VVD))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS (was_VBDZ (it_PPH1 (that_CST (he_PPHS1 (helped_VVD))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS was_VBDZ it_PPH1 who_PNQS he_PPHS1 helped_VVD ?_?

Tree selected:

((Who_PNQS (was_VBDZ (it_PPH1 (who_PNQS (he_PPHS1 (helped_VVD))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS (was_VBDZ (it_PPH1 (who_PNQS (he_PPHS1 (helped_VVD))))))
 (?_?))

Accept tree? y


----------------
With_IW whom_PNQO is_VBZ it_PPH1 that_CST he_PPHS1 agrees_VVZ ?_?

No parses


----------------
Who_PNQS is_VBZ she_PPHS1 amused_VVD that_CST he_PPHS1 helps_VVZ ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS is_VBZ she_PPHS1)
     (amused_VVD that_CST he_PPHS1 helps_VVZ))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_vp Who_PNQS
     (is_VBZ she_PPHS1 amused_VVD that_CST he_PPHS1 helps_VVZ))
    (End-punct1/--- ?_?))
3: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (is_VBZ she_PPHS1 amused_VVD that_CST he_PPHS1 helps_VVZ))
    (End-punct1/--- ?_?))
Which choice (1 - 3 / undo / gde / restart / skip / finish)? 3

Tree selected:

((Who_PNQS
  (is_VBZ (she_PPHS1 (amused_VVD (that_CST (he_PPHS1 (helps_VVZ)))))))
 (?_?))

Is the tree OK? y

1 parses

((Who_PNQS
  (is_VBZ (she_PPHS1 (amused_VVD (that_CST (he_PPHS1 (helps_VVZ)))))))
 (?_?))

Accept tree? y


----------------
Who_PNQS was_VBDZ she_PPHS1 acknowledged_VVD to_TO have_VH0 helped_VVD ?_?

1: (T/txt-sc1/+
    (S/s-wh_vp-r
     (Who_PNQS was_VBDZ she_PPHS1 acknowledged_VVD to_TO have_VH0)
     (helped_VVD))
    (End-punct1/--- ?_?))
2: (T/txt-sc1/+
    (S/np-wh_vp Who_PNQS
     (was_VBDZ she_PPHS1 acknowledged_VVD to_TO have_VH0 helped_VVD))
    (End-punct1/--- ?_?))
3: (T/txt-sc1/+
    (S/s-wh_vp-r (Who_PNQS was_VBDZ she_PPHS1)
     (acknowledged_VVD to_TO have_VH0 helped_VVD))
    (End-punct1/--- ?_?))
4: (T/txt-sc1/+
    (S/np-wh_s-gap Who_PNQS
     (was_VBDZ she_PPHS1 acknowledged_VVD to_TO have_VH0 helped_VVD))
    (End-punct1/--- ?_?))
Which choice (1 - 4 / undo / gde / restart / skip / finish)? finish


----------------
Suspended parsing file /local/scratch/ejb/rasp/gram/tsgram/corpus/wh.tag2
